{
	// Place your UsonicTimer workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }


"connectToWiFi": {
	"prefix": "c2wifi",
	"body":[
	"",
    "/**    connectToWiFi()",
    "* @author Kevin Murphy (https://www.SomerledDesign.com)",
    "* @link @endlink",
    "* @brief implement a wifi connection on the ESP8266",
    "*",
    "* @param *ssid",
    "* @param *password",
    "*/",
      "void connectToWiFi()",
    "{",
     "// Connect to WiFi Network",
     "debugln();",
     "debugln();",
     "debug(\"Connecting to WiFi\");",
     "debug(\" ...\");",
     "// WiFi.begin(ssid, password);",
     "int retries = 0;",
     "while ((WiFi.status() != WL_CONNECTED) && (retries < 15))",
     "{",
       "retries++;",
       "yield();",
       "delay(500);",
       "debug(\".\");",
     "}",
     "if (retries > 14)",
     "{",
       "debugln(F(\"WiFi connection FAILED\"));",
     "}",
     "if (WiFi.status() == WL_CONNECTED)",
     "{",
       "debugln(F(\"WiFi connected!\"));",
       "debugln(\"IP address: \");",
       "debugln(WiFi.localIP());",
     "}",
     "debugln(F(\"Setup ready\"));",
     "yield();",
    "}   // end connectToWiFi()"
	],
	"description": "Function connectToWifi()"
	}
}